version: '3.8'

services:
  # Aplicação Node.js
  app:
    build:
      context: ./app
    container_name: nodejs-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=testdb
    depends_on:
      - postgres
    networks:
      - app-network

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    ports:
      - "5432:5432"

  # Nginx (proxy reverso)
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app-network

# Redes
networks:
  app-network:
    driver: bridge

# Volumes (armazenamento)
volumes:
  postgres-data:
    driver: local
